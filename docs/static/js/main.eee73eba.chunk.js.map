{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/marvel/MarvelScreen.js","components/ui/Navbar.js","components/search/SearchScreen.js","components/hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","HerosApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","name","replace","heroes","HeroScreen","heroeId","useParams","hero","useMemo","id","find","to","superhero","publisher","alter_ego","first_appearance","characters","src","alt","length","push","goBack","HeroCard","style","maxWidth","HeroList","includes","Error","filter","getHeroesByPublisher","map","heroRet","DcScreen","MarvelScreen","Navbar","user","useHistory","activeClassName","exact","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","heroFiltered","toLowerCase","getHeroesByName","onSubmit","e","preventDefault","autoComplete","placeholder","onChange","DashboardRoutes","path","component","PrivateRoute","isAutenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","init","JSON","HerosApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eee73eba.chunk.js","sourcesContent":["import { createContext } from 'react'\r\nexport const AuthContext = createContext();","export const types =  {\r\n    login:  '[auth] login',\r\n    logout: '[auth] logout'\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n/*\r\nconst state = {\r\n    name: 'fernando',\r\n    logged: true\r\n}*/\r\n\r\nexport const authReducer = ( state = {}, action) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            \r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n\r\n        case types.logout:\r\n            \r\n            return {\r\n                logged: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const LoginScreen = ( { history }) => {\r\n\r\n    const { dispatch } = useContext(AuthContext);\r\n\r\n    const handleLogin = () => {\r\n        //console.log('history', history);\r\n        //history.push('/'); //uno deja navegar para atras y el otro como que pirde la historia\r\n        //history.replace('/');\r\n\r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n\r\n\r\n        dispatch ({\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Nicolas'\r\n            }\r\n        })\r\n\r\n        history.replace(lastPath);\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>LoginScreen</h1>\r\n            <hr />\r\n\r\n            <button className='btn-primary'\r\n                    onClick= { handleLogin }\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React, { useMemo} from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n//import batman from '../../assets/heroes/dc-batman.jpg' //contenido estatico\r\n\r\n//const pathImages = '../../assets/heroes/';\r\n//const heroImages = require.context('../../assets/heroes', true); //context web pack\r\n\r\nexport const HeroScreen = ( {history} ) => {\r\n\r\n    const {heroeId} =  useParams ();\r\n    //console.log('heroeId', heroeId)\r\n\r\n    //const hero = getHeroById(heroeId);\r\n    const hero = useMemo(() => getHeroById(heroeId), [heroeId ]);\r\n\r\n\r\n    //console.log('hero', hero)\r\n\r\n    if (!hero) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        //console.log( 'history', history);\r\n\r\n        if (history.length <= 2)\r\n        {\r\n            history.push('/');\r\n        }else{\r\n            history.goBack();\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    const {\r\n        superhero\t\t\t,\r\n        publisher\t\t\t,\r\n        alter_ego\t\t\t,\r\n        first_appearance\t,\r\n        characters\t\t\t\r\n    } = hero;\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img    \r\n                        src={  `../../assets/heroes/${ heroeId }.jpg` }  //desde public/asset\r\n                        //src={  `./../assets/heroes/${ heroeId }.jpg`.default }  //desde public/asset\r\n                        //src={batman} //contenido estatico\r\n                        //src={  (heroImages(`./${ heroeId }.jpg`).default) } //context web pack\r\n                        alt={superhero}\r\n                        className=\"img-thumbnail  animate__animated animate__fadeInLeft\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-8 animate__animated animate__fadeIn\">\r\n                <h3> {superhero} </h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n\r\n                    <li className=\"list-group-item\"> <b> Alter Ego: </b>{ alter_ego } </li>\r\n                    <li className=\"list-group-item\"> <b> Publisher: </b>{ publisher } </li>\r\n                    <li className=\"list-group-item\"> <b> First appearance: </b>{ first_appearance } </li>\r\n\r\n                </ul>\r\n\r\n                <h5> Characters </h5>\r\n                <p>  { characters }   </p>\r\n\r\n                <button className=\"btn btn-outline-info\"\r\n                        onClick={handleReturn}\r\n                >\r\n                    Return\r\n                </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroById = ( id ) => {\r\n    return heroes.find (heroes => heroes.id === id) ;\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n//const heroImages = require.context('../../assets/heroes', true);\r\n\r\nexport const HeroCard = ( \r\n    {id\t\t\t\t,\r\n    superhero\t\t,\r\n    publisher\t\t,\r\n    alter_ego\t\t,\r\n    first_appearance,\r\n    characters\t\t,\r\n    } \r\n    ) => {\r\n    return (\r\n        <div className=\"card ms-3\" style={{maxWidth: 540}}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={` ./assets/heroes/${ id }.jpg `} className=\"card-img\" alt={superhero}/>\r\n                    {/*<img src={  (heroImages(`./${ id }.jpg`).default) }  className=\"card-img\" alt={superhero}/>*/}\r\n                    \r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\"> {superhero} </h5>\r\n                        <p className=\"card-text\">   {alter_ego} </p>\r\n\r\n                        {\r\n                            (alter_ego !== characters)\r\n                                && <p className=\"card-text\"> {characters} </p>\r\n                        }\r\n\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\"> {first_appearance} </small>\r\n                        </p>\r\n\r\n                        <Link to={ `./hero/${ id }` }>\r\n                            Mas...\r\n                        </Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport { HeroCard } from './HeroCard';\r\n\r\nexport const HeroList = ( { publisher }) => {\r\n\r\n    //const heroes = getHeroesByPublisher(publisher);\r\n\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher ]);\r\n\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeIn\">    \r\n            {\r\n                heroes.map(\r\n                    heroRet => (\r\n                        <HeroCard   key={heroRet.id}\r\n                                    { ...heroRet}\r\n                        />\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByPublisher = ( publisher ) => {\r\n    const validPublisher = ['DC Comics','Marvel Comics'];\r\n\r\n    if ( !validPublisher.includes(publisher)){\r\n        throw new Error(`Publisher \"${publisher}\" no es correcto`);\r\n    }\r\n\r\n    return heroes.filter (heroes => heroes.publisher === publisher) \r\n}","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList';\r\n\r\nexport const DcScreen = () => {\r\n\r\n    const publisher = 'DC Comics';\r\n\r\n    return (\r\n        <div>\r\n            <h1>DcScreen</h1>\r\n            <hr/>\r\n\r\n            <HeroList publisher={publisher}/>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList';\r\n\r\nexport const MarvelScreen = () => {\r\n\r\n    const publisher = 'Marvel Comics';\r\n\r\n    return (\r\n        <div>\r\n            <h1>MarvelScreen</h1>\r\n            <hr/>\r\n\r\n            <HeroList publisher={publisher}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//'publisher':'Marvel Comics', \r\n//'publisher':'DC Comics', ","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = (  ) => {\r\n\r\n    //const [ todos, dispatch ] = useReducer(todoReducer, initialState, init);\r\n    const { user:{name}, dispatch } = useContext(AuthContext);\r\n    //const { name } = user;\r\n    //console.log('user', user);\r\n    //console.log('name', name);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n\r\n        history.replace('/login');\r\n\r\n        dispatch ({\r\n            type: types.logout,\r\n            /*\r\n            payload: {\r\n                name: ''\r\n            }\r\n            */\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                App Superheroes\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n\r\n                    <span  className=\"nav-item nav-link text-info\" \r\n                    >\r\n                        {name}\r\n\r\n                    </span>\r\n\r\n                    <button \r\n                        className=\"nav-item nav-link btn\" \r\n                        onClick={ handleLogout}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\n//import { heroes } from '../../data/heroes'\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport { useForm } from '../hooks/useForm';\r\nimport queryString from 'query-string';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\n\r\n\r\nexport const SearchScreen = ( { history} ) => {\r\n\r\n    const location = useLocation();\r\n    //console.log('location', location);\r\n    const {q = ''} = queryString.parse(location.search);\r\n    //console.log('q', q);\r\n\r\n\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        searchText: q\r\n    })\r\n\r\n    const { searchText } = formValues;\r\n\r\n    //    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher ]);\r\n    const heroFiltered = useMemo(() => getHeroesByName(q), [q]);\r\n\r\n/* aca el curso me pude que use el memo, no se puede usar el efec?\r\n    useEffect(() => {\r\n        //console.log('searchText cambio');\r\n        return () => {\r\n        }\r\n    }, [searchText]);\r\n*/\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n\r\n        //console.log(history);\r\n        history.push(`?q=${ searchText }`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>SearchScreen</h1>\r\n            <hr/>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-5\">\r\n                    <h4>SearchForm</h4>\r\n                    <form onSubmit={handleSearch}>\r\n                        <input  type=\"text\"\r\n                                name=\"searchText\"\r\n                                autoComplete=\"off\"\r\n                                value= {searchText}\r\n                                placeholder=\"Busca tu Heroe\"\r\n                                className=\"find-control\"\r\n                                onChange={handleInputChange}\r\n                        />\r\n                        <button type=\"submit\"\r\n                                className=\"btn m-1 btn-block btn-outline-primary\"\r\n                        >\r\n                            Search...\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-7\">\r\n                    <h4>Results</h4>\r\n                    <hr/>\r\n                    { (q === '')\r\n                        &&\r\n                        <div className=\"alert alert-info\">\r\n                            Buscar un Heroe\r\n                        </div>\r\n                    }\r\n                    { (q !== '' && heroFiltered.length === 0)\r\n                        &&\r\n                        <div className=\"alert alert-danger\">\r\n                            {`no hay heroe con valores: ${ q }`}\r\n                        </div>\r\n                    }\r\n                    {\r\n                        heroFiltered.map( heroRet => ( <HeroCard key={heroRet.id} {...heroRet}/> ))\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByName = ( name = '' ) => {\r\n\r\n    if (name === ''){\r\n        return [];\r\n    }\r\n\r\n    name = name.toLowerCase();\r\n    return heroes.filter (heroes => heroes.superhero.toLowerCase().includes(name)) ;\r\n}","import React from 'react'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nimport { HeroScreen } from '../components/heroes/HeroScreen'\r\nimport { DcScreen } from '../components/dc/DcScreen'\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\r\nimport { Navbar } from '../components/ui/Navbar';\r\nimport { SearchScreen } from '../components/search/SearchScreen';\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar/>\r\n\r\n            <div className=\"container mt-2\">\r\n\r\n            <Switch>\r\n                <Route exact path=\"/marvel\" component= { MarvelScreen } />\r\n                <Route exact path=\"/hero/:heroeId\" component= { HeroScreen } />\r\n                <Route exact path=\"/dc\" component= { DcScreen} />\r\n                <Route exact path=\"/search\" component= { SearchScreen} />\r\n                <Redirect to='/marvel'/>\r\n\r\n\r\n            </Switch>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ( {\r\n    isAutenticated,\r\n    component: Component,\r\n    ...rest\r\n} ) => {\r\n\r\n\r\n    //console.log('rest', rest.location.pathname);\r\n    localStorage.setItem('lastPath',rest.location.pathname) ;\r\n\r\n    return (\r\n        <Route  {...rest}\r\n                component={ (props) => (\r\n                        (isAutenticated)\r\n                        ? <Component {...props}/>\r\n                        : (<Redirect to=\"/login\"/>)\r\n                    )\r\n                }\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAutenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ( {\r\n    isAutenticated,\r\n    component: Component,\r\n    ...rest\r\n} ) => {\r\n\r\n    return (\r\n        <Route  {...rest}\r\n                component={ (props) => (\r\n                        (!isAutenticated)\r\n                        ? <Component {...props}/>\r\n                        : (<Redirect to=\"/\"/>)\r\n                    )\r\n                }\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAutenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useContext } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n//import { MarvelScreen } from '../components/marvel/MarvelScreen';\r\n//import { Navbar } from '../components/ui/Navbar';\r\n\r\nexport const AppRouter = () => {\r\n\r\n\r\n  const { user } = useContext(AuthContext);\r\n  //console.log('user', user);\r\n\r\n    return (\r\n    <Router>\r\n\r\n      <div>\r\n\r\n        {/*<Navbar />*/}\r\n\r\n        <Switch>\r\n        \r\n          <PublicRoute  exact path=\"/login\" \r\n                        component= { LoginScreen } \r\n                        isAutenticated={user.logged}\r\n\r\n          \r\n          />\r\n        \r\n          <PrivateRoute path=\"/\"\r\n                        component= { DashboardRoutes  } \r\n                        isAutenticated={user.logged}\r\n          />\r\n        \r\n        </Switch>\r\n      \r\n      </div>\r\n\r\n    </Router>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || {logged: false};\r\n    \r\n}\r\n\r\nexport const HerosApp = () => {\r\n\r\n    const [user , dispatch] = useReducer(authReducer, {}, init)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [user])\r\n\r\n    return (\r\n        <div>\r\n            <AuthContext.Provider value= {{ user , dispatch }}>\r\n                <AppRouter/>   \r\n            </AuthContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HerosApp } from './HerosApp';\n\nReactDOM.render(\n    <HerosApp />, \n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}