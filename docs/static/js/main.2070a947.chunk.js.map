{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputvalue","setinputvalue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","defaultCategories","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"2MAyCeA,EAtCY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAIEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EAEPU,SAxBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,0DAG4CC,UAAWH,GAHvD,sDAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACvB,MAAS,CACIC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXnC,kBAkBVM,GAlBU,4CAAH,sDCGPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC2BDO,EA7BQ,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECNwB,SAAEA,GAE1B,MAA0Bd,mBAAU,CAChCqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAhBAC,qBAAW,WACPxB,EAASC,GACJwB,MAAO,SAAAC,GAIJH,EAAW,CACPf,KAAMkB,EACNL,SAAQ,SAKtB,CAAEpB,IAGGqB,EDlB0BK,CAAa1B,GAAhCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACA,qBAAKJ,UAAU,oCAAf,cAAsDhB,EAAtD,OACEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEiBlBgB,EA/Ba,SAAC,GAA+B,IAAD,IAA5BC,yBAA4B,MAAR,GAAQ,EAGvD,EAAoC1C,mBAAS0C,GAA7C,mBAAOC,EAAP,KAAmB5C,EAAnB,KAGA,OACI,qCACI,kDACA,uBAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BAEQ4C,EAAWpB,KAAI,SAACT,GAAD,OAEP,aADJ,CACK,EAAD,CACmBA,SAAUA,GAApBA,YChB/B8B,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OAAO,cAAC,EAAD,CAAcN,kBAAqB,CAAC,YAAcE,K","file":"static/js/main.2070a947.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputvalue, setinputvalue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputvalue(e.target.value);\r\n\r\n        //console.log('handleInputChange llamado');\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        //console.log('handleSubmit'); \r\n\r\n        if (inputvalue.trim().length > 2) {\r\n            setCategories(cats => [ inputvalue, ...cats]); //cats => ['Pokemon', ...categories]\r\n            setinputvalue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"Text\"\r\n                value={inputvalue}\r\n                //onChange={ (e) => console.log(e)}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","export const getGifs = async( category ) => {\r\n\r\n    //const url = \"https://api.giphy.com/v1/gifs/search?limit=10&q=Rick&api_key=nMgNpR5olh7WwLadlzTB8Q5eVAT2VFyN\";\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI (category)}&api_key=nMgNpR5olh7WwLadlzTB8Q5eVAT2VFyN`;\r\n    const resp = await fetch (url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n           return   {\r\n                        id: img.id,\r\n                        title: img.title,\r\n                        url: img.images?.downsized_medium.url\r\n            }\r\n\r\n        }\r\n    )\r\n\r\n    //console.log(data);\r\n    return ( gifs );\r\n\r\n}   \r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3  className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>} \r\n\r\n        <div className=\"card-grid\">\r\n                 {\r\n                    images.map( img  => (\r\n                        <GifGridItem \r\n                        key={img.id} \r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid;","import  {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState( {\r\n        data: [],\r\n        loading: true\r\n        }\r\n    );\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then ( imgs => {\r\n\r\n\r\n\r\n                setState ( {\r\n                    data: imgs, \r\n                    loading:false\r\n                } )\r\n\r\n\r\n        });\r\n    },[ category ]);\r\n\r\n\r\n    return state; // { data [], loading: true}\r\n}","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = ( {defaultCategories = []}) => {\r\n\r\n    //const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n    const [categories, setCategories] = useState(defaultCategories );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Buscador de gif </h2>\r\n            <hr/>\r\n\r\n            <AddCategory setCategories={ setCategories }/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category) => (\r\n                        //<li key={categoria}>{categoria}</li>\r\n                            <GifGrid \r\n                                key={category} category={category}\r\n                            />\r\n                         )\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(<GifExpertApp defaultCategories = {['Vegeta']} />,divRoot);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}